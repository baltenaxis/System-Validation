
map
  NUM_WAFERS  : Nat;  NUM_SLUICES : Nat;
  NUM_FOUP_IN : Nat;  NUM_FOUP_OUT: Nat;
  MAX_WAITING_CAPACITY : Nat;  
eqn
  NUM_WAFERS   = 2;
  NUM_SLUICES  = 2;
  NUM_FOUP_IN  = 2;
  NUM_FOUP_OUT = 2;
  MAX_WAITING_CAPACITY = 1;  

sort
  SluiceId = struct s(n:Nat);
  Wafer    = struct w(n:Nat);

  Loc =
      struct in_cell(n:Nat)
           | sl_out(SluiceId)
           | sl_in(SluiceId)
           | waiting
           | stage
           | out_cell(n:Nat);

  PMode = struct Atm | Pumping | Vac | Venting;

  MOptWafer = struct none | some(Wafer);

act

  open_inner, close_inner : SluiceId;
  open_outer, close_outer : SluiceId;
  start_pump_down, vacuum_achieved : SluiceId;
  start_vent, atmosphere_achieved  : SluiceId;
  vacuum_fault : SluiceId;


  transfer_in, transfer_out : Wafer # SluiceId;
  

  sluice_to_chamber, chamber_to_sluice : Wafer # SluiceId;
  
  pick, place : Wafer # Loc;

  load_stage, start_projection, end_projection, unload_stage : Wafer;

  wafer_entered_system, wafer_output : Wafer;


  trigger_alarm, restart_system : SluiceId;


  or_place_ext, sl_accept_ext : Wafer # SluiceId;
  or_pick_ext, sl_release_ext : Wafer # SluiceId;
  

  sl_transfer_to_inside, inside_accept_from_sluice : Wafer # SluiceId;

  inside_transfer_to_sluice, sluice_accept_from_inside : Wafer # SluiceId;

  c_place_ext, c_pick_ext : Wafer # SluiceId;


map
  validSluice  : SluiceId -> Bool;
  validWafer   : Wafer    -> Bool;
  validInCell  : Nat      -> Bool;
  validOutCell : Nat      -> Bool;
  sid2n        : SluiceId -> Nat;
  w2n          : Wafer    -> Nat;

var k:Nat; sid:SluiceId; wf:Wafer;

eqn
  sid2n(s(k)) = k;
  w2n(w(k))   = k;

  validSluice(sid) = sid2n(sid) < NUM_SLUICES;
  validWafer(wf)   = w2n(wf)    < NUM_WAFERS;
  validInCell(k)   = k < NUM_FOUP_IN;
  validOutCell(k)  = k < NUM_FOUP_OUT;


proc OutsideRobotController(
  phase    : Wafer -> Nat,
  out_occ  : Nat   -> Bool
) =
  sum i:Nat, sid:SluiceId . (
      i < NUM_WAFERS && validInCell(i) && validSluice(sid) && 
      phase(w(i)) == 0
    ) -> pick(w(i), in_cell(i)) . wafer_entered_system(w(i)) . 
         or_place_ext(w(i), sid) .
         OutsideRobotController(phase[w(i)->1], out_occ)
+
  sum sid:SluiceId, i:Nat, oc:Nat . (
      validSluice(sid) && i < NUM_WAFERS && validWafer(w(i)) &&
      validOutCell(oc) && !out_occ(oc) &&
      phase(w(i)) >= 1
    ) -> or_pick_ext(w(i), sid) . 
         place(w(i), out_cell(oc)) . wafer_output(w(i)) .
         OutsideRobotController(phase[w(i)->2], out_occ[oc->true])
;


proc SluiceController(
  sid       : SluiceId,
  in_open   : Bool,
  out_open  : Bool,
  mode      : PMode,
  buf_occ   : Bool,
  buf_w     : MOptWafer,
  ext_port_w: MOptWafer,
  ext_is_output: Bool,
  from_inside: Bool,
  alarm     : Bool
) =

  (mode == Atm && !out_open && !in_open && !alarm) 
    -> open_outer(sid) .
       SluiceController(sid, in_open, true, mode, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (out_open && !alarm) 
    -> close_outer(sid) .
       SluiceController(sid, in_open, false, mode, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (mode == Vac && !in_open && !out_open && !alarm) 
    -> open_inner(sid) .
       SluiceController(sid, true, out_open, mode, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (in_open && !alarm) 
    -> close_inner(sid) .
       SluiceController(sid, false, out_open, mode, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (!in_open && !out_open && mode == Atm && buf_occ && !alarm) 
    -> start_pump_down(sid) .
       SluiceController(sid, in_open, out_open, Pumping, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (mode == Pumping && !alarm) 
    -> vacuum_achieved(sid) .
       SluiceController(sid, in_open, out_open, Vac, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (!in_open && !out_open && mode == Vac && !alarm) 
    -> start_vent(sid) .
       SluiceController(sid, in_open, out_open, Venting, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (mode == Venting && !alarm) 
    -> atmosphere_achieved(sid) .
       SluiceController(sid, in_open, out_open, Atm, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, alarm)
+

  (mode == Pumping && !alarm)
    -> vacuum_fault(sid) . trigger_alarm(sid) .
       SluiceController(sid, in_open, out_open, Atm, buf_occ, buf_w, ext_port_w, ext_is_output, from_inside, true)
+

  

  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      out_open && !in_open && mode == Atm && ext_port_w == none && !alarm
    ) -> sl_accept_ext(w(i), sid) .
         SluiceController(sid, in_open, out_open, mode, buf_occ, buf_w, 
                         some(w(i)), false, from_inside, alarm)
+
  
  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      out_open && !in_open && mode == Atm && !buf_occ &&
      ext_port_w == some(w(i)) && !alarm
    ) -> transfer_in(w(i), sid) . place(w(i), sl_in(sid)) .
         SluiceController(sid, in_open, out_open, mode, true, some(w(i)), 
                         none, false, false, alarm)
+

  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      out_open && !in_open && mode == Atm && buf_occ &&
      buf_w == some(w(i)) && ext_port_w == none && from_inside && !alarm
    ) -> transfer_out(w(i), sid) . place(w(i), sl_out(sid)) .
         SluiceController(sid, in_open, out_open, mode, false, none, 
                         some(w(i)), true, false, alarm)
+

  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      out_open && !in_open && mode == Atm &&
      ext_port_w == some(w(i)) && ext_is_output && !alarm
    ) -> sl_release_ext(w(i), sid) .
         SluiceController(sid, in_open, out_open, mode, buf_occ, buf_w, 
                         none, false, from_inside, alarm)
+

  

  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      in_open && !out_open && mode == Vac && buf_occ && !alarm &&
      buf_w == some(w(i))
    ) -> sl_transfer_to_inside(w(i), sid) .
         SluiceController(sid, in_open, out_open, mode, false, none, 
                         ext_port_w, ext_is_output, false, alarm)
+

  sum i:Nat . (
      i < NUM_WAFERS && validWafer(w(i)) &&
      in_open && !out_open && mode == Vac && !buf_occ && !alarm
    ) -> sluice_accept_from_inside(w(i), sid) .
         SluiceController(sid, in_open, out_open, mode, true, some(w(i)), 
                         ext_port_w, ext_is_output, true, alarm)
+

  (alarm) -> restart_system(sid) .
    SluiceController(sid, in_open, out_open, mode, buf_occ, buf_w, 
                    ext_port_w, ext_is_output, from_inside, false)
;


proc InsideController(
  is_waiting: Wafer -> Bool,
  stage_busy: Bool,
  on_stage  : MOptWafer,
  processed : Wafer -> Bool,
  waiting_count: Nat
) =

  sum sid:SluiceId, i:Nat . (
      validSluice(sid) && i < NUM_WAFERS && validWafer(w(i)) &&
      !is_waiting(w(i)) && waiting_count < MAX_WAITING_CAPACITY
    ) -> inside_accept_from_sluice(w(i), sid) . place(w(i), waiting) .
         InsideController(is_waiting[w(i)->true], stage_busy, on_stage, processed, waiting_count + 1)
+

  sum sid:SluiceId, i:Nat . (
      validSluice(sid) && i < NUM_WAFERS && validWafer(w(i)) &&
      is_waiting(w(i)) && processed(w(i)) && waiting_count > 0
    ) -> inside_transfer_to_sluice(w(i), sid) . place(w(i), sl_in(sid)) .
         InsideController(is_waiting[w(i)->false], stage_busy, on_stage, processed, 
                         if(waiting_count > 0, Int2Nat(waiting_count - 1), 0))
+

  sum i:Nat . (
      i < NUM_WAFERS && is_waiting(w(i)) && !stage_busy && !processed(w(i)) && waiting_count > 0
    ) -> load_stage(w(i)) . start_projection(w(i)) . end_projection(w(i)) .
         InsideController(is_waiting[w(i)->false], true, some(w(i)), 
                         processed[w(i)->true], 
                         if(waiting_count > 0, Int2Nat(waiting_count - 1), 0))
+

  sum i:Nat . (
      i < NUM_WAFERS && on_stage == some(w(i)) && waiting_count < MAX_WAITING_CAPACITY
    ) -> unload_stage(w(i)) . place(w(i), waiting) .
         InsideController(is_waiting[w(i)->true], false, none, processed, waiting_count + 1)
;

init
  allow({
    open_inner, close_inner, open_outer, close_outer,
    start_pump_down, vacuum_achieved, start_vent, atmosphere_achieved,
    vacuum_fault,
    transfer_in, transfer_out,
    sluice_to_chamber, chamber_to_sluice,
    pick, place,
    load_stage, start_projection, end_projection, unload_stage,
    wafer_entered_system, wafer_output,
    trigger_alarm, restart_system,
    c_place_ext, c_pick_ext
  },
  comm({

    or_place_ext | sl_accept_ext -> c_place_ext,
    or_pick_ext | sl_release_ext -> c_pick_ext,
    

    sl_transfer_to_inside | inside_accept_from_sluice -> sluice_to_chamber,
    inside_transfer_to_sluice | sluice_accept_from_inside -> chamber_to_sluice
  },
    OutsideRobotController(
      lambda wf:Wafer . 0,
      lambda k:Nat    . false
    )
    ||
    SluiceController(
      s(0), false, false, Vac, false, none, none, false, false, false
    )
    ||
    SluiceController(
      s(1), false, false, Vac, false, none, none, false, false, false
    )
    ||
    InsideController(
      lambda wf:Wafer . false,
      false,
      none,
      lambda wf:Wafer . false,
      0  
    )
  ));
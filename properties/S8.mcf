% after pick(w(i), L), no (pick/place) by j!=i at same L until place(w(i), L)
% L = waiting
(forall i,j:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j) =>
  [ true* . pick(w(i), waiting) . (!place(w(i), waiting))* .
    ( pick(w(j), waiting) || place(w(j), waiting) )
  ] false
&&
% L = stage
forall i,j:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j) =>
  [ true* . pick(w(i), stage) . (!place(w(i), stage))* .
    ( pick(w(j), stage) || place(w(j), stage) )
  ] false)
&&
% L = sl_in(s(k))
(forall i,j,k:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && k < NUM_SLUICES) =>
  [ true* . pick(w(i), sl_in(s(k))) . (!place(w(i), sl_in(s(k))))* .
    ( pick(w(j), sl_in(s(k))) || place(w(j), sl_in(s(k))) )
  ] false)
&&
% L = sl_out(s(k))
(forall i,j,k:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && k < NUM_SLUICES) =>
  [ true* . pick(w(i), sl_out(s(k))) . (!place(w(i), sl_out(s(k))))* .
    ( pick(w(j), sl_out(s(k))) || place(w(j), sl_out(s(k))) )
  ] false)
&&
% L = in_cell(c)
(forall i,j,c:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && c < NUM_FOUP_IN) =>
  [ true* . pick(w(i), in_cell(c)) . (!place(w(i), in_cell(c)))* .
    ( pick(w(j), in_cell(c)) || place(w(j), in_cell(c)) )
  ] false)
&&
% L = out_cell(c)
(forall i,j,c:Nat. val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && c < NUM_FOUP_OUT) =>
  [ true* . pick(w(i), out_cell(c)) . (!place(w(i), out_cell(c)))* .
    ( pick(w(j), out_cell(c)) || place(w(j), out_cell(c)) )
  ] false)
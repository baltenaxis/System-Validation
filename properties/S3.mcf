%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% S3 â€” No overfill for exclusive locations only
%     (waiting is a pool -> excluded)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% sl_out(s(k)) is released by pick(w(i), sl_out(s(k))) OR transfer_in(w(i), s(k))
(forall i,j,k:Nat.
  val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && k < NUM_SLUICES) =>
  [ true* . place(w(i), sl_out(s(k))) .
    ( ! ( pick(w(i), sl_out(s(k))) || transfer_in(w(i), s(k)) ) )* .
    place(w(j), sl_out(s(k))) ] false)
&&

% sl_in(s(k)) is released by transfer_out(w(i), s(k))
(forall i,j,k:Nat.
  val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && k < NUM_SLUICES) =>
  [ true* . place(w(i), sl_in(s(k))) .
    ( ! transfer_out(w(i), s(k)) )* .
    place(w(j), sl_in(s(k))) ] false)
&&

% input FOUP cell released by pick
(forall i,j,c:Nat.
  val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && c < NUM_FOUP_IN) =>
  [ true* . place(w(i), in_cell(c)) .
    ( ! pick(w(i), in_cell(c)) )* .
    place(w(j), in_cell(c)) ] false)
&&

% output rack cell released by pick (usually never happens -> stays exclusive)
(forall i,j,c:Nat.
  val(i < NUM_WAFERS && j < NUM_WAFERS && i != j && c < NUM_FOUP_OUT) =>
  [ true* . place(w(i), out_cell(c)) .
    ( ! pick(w(i), out_cell(c)) )* .
    place(w(j), out_cell(c)) ] false)
